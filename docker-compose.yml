version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: talynk-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-talynk}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: talynk-api
    env_file:
      - .env
    environment:
      # Fallbacks if .env not present for local demo
      PORT: ${PORT:-3000}
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/talynk?schema=public}
      JWT_SECRET: ${JWT_SECRET:-dev_secret}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev_refresh_secret}
      SUPABASE_URL: ${SUPABASE_URL:-https://example.supabase.co}
      SUPABASE_KEY: ${SUPABASE_KEY:-anon_key}
      SUPABASE_BUCKET_NAME: ${SUPABASE_BUCKET_NAME:-posts}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads

volumes:
  db_data:
  uploads_data:


