version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: talynk-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-talynk}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    # Use image from GHCR to allow Watchtower auto-updates; uncomment build for local builds
    image: ghcr.io/ihirwepatrick/talynk-backend:latest
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    container_name: talynk-api
    env_file:
      - .env
    environment:
      # Force container DB in compose regardless of host env
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-talynk}?schema=public
      # Fallbacks for others if .env not present
      PORT: ${PORT:-3000}
      NODE_ENV: ${NODE_ENV:-production}
      JWT_SECRET: ${JWT_SECRET:-dev_secret}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev_refresh_secret}
      SUPABASE_URL: ${SUPABASE_URL:-https://example.supabase.co}
      SUPABASE_KEY: ${SUPABASE_KEY:-anon_key}
      SUPABASE_BUCKET_NAME: ${SUPABASE_BUCKET_NAME:-posts}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_DISABLE_CONTAINERS=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

volumes:
  db_data:
  uploads_data:


